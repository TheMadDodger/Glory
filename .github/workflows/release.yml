name: Release

on:
  workflow_dispatch:

env:
  # Path to the solution file relative to the root of the project.
  SOLUTION_FILE_PATH: ./GloryEngine
  # Path to premake5.exe
  PREMAKE_PATH: "third-party/premake/premake5.exe"
  # Premake arg
  PREMAKE_ARG: vs2022

  # Configuration type to build.
  # You can convert this to a build matrix if you need coverage of multiple configuration types.
  # https://docs.github.com/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
  BUILD_CONFIGURATION: Release

  BUILD_PATH: ./GloryEngine/Build/Release/x64/Launcher

permissions:
  contents: read

jobs:
  build-editor-win64:
    runs-on: windows-latest
    environment: 'release'

    steps:
    - name: Checkout repo and submodules
      uses: actions/checkout@v3
      with:
        lfs: true
        submodules: recursive

    - name: Checkout LFS objects
      run: git lfs checkout

    - name: Download mono
      working-directory: ${{env.SOLUTION_FILE_PATH}}
      run: curl "https://download.mono-project.com/archive/6.12.0/windows-installer/mono-6.12.0.182-x64-0.msi" -o mono.msi

    - name: Install mono
      working-directory: ${{env.SOLUTION_FILE_PATH}}
      run: |
        .\install-mono.ps1

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v1.0.2

    - name: Restore cached dependencies
      id: cache-dependencies-restore
      uses: actions/cache/restore@v3
      env:
        cache-name: cache-dependencies
      with:
        path: ${{env.SOLUTION_FILE_PATH}}/Dependencies
        key: ${{ runner.os }}-dependencies

    - if: ${{ steps.cache-dependencies-restore.outputs.cache-hit != 'true' }}
      name: Install dependencies
      working-directory: ${{env.SOLUTION_FILE_PATH}}
      run: sh ./install-dependencies.sh Release
      shell: bash

    - if: ${{ steps.cache-dependencies-restore.outputs.cache-hit != 'true' }}
      name: Cache dependencies
      id: cache-dependencies-save
      uses: actions/cache/save@v3
      env:
        cache-name: cache-dependencies
      with:
        path: ${{env.SOLUTION_FILE_PATH}}/Dependencies
        key: ${{ steps.cache-dependencies-restore.outputs.cache-primary-key }}

    - name: Run premake5
      working-directory: ${{env.SOLUTION_FILE_PATH}}
      run: ${{env.PREMAKE_PATH}} ${{env.PREMAKE_ARG}}

    - name: Restore NuGet packages
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: nuget restore ${{env.SOLUTION_FILE_PATH}}

    - name: Build
      working-directory: ${{env.SOLUTION_FILE_PATH}}
      run: msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} /p:Platform=x64 .

    - name: Upload editor Artifact
      uses: actions/upload-artifact@v3.1.2
      with:
        name: editor-zip
        path: ${{env.BUILD_PATH}}
        retention-days: 30
